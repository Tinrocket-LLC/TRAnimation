<?xml version="1.0" encoding="UTF-8"?>
<RBProject version="2023r1.1" FormatVersion="2" MinIDEVersion="20190300">
<block type="Module" ID="1577361407">
 <ObjName>TRNotification</ObjName>
 <ObjContainerID>1365530623</ObjContainerID>
 <IsClass>0</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>SubscribeTo</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>641359871</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub SubscribeTo(notification as String, subscriber as TRNotificationDelegate)</SourceLine>
   <SourceLine>'#Pragma BackgroundTasks False</SourceLine>
   <SourceLine>'#Pragma StackOverflowChecking False</SourceLine>
   <SourceLine>'#Pragma NilObjectChecking False</SourceLine>
   <SourceLine>'#Pragma BoundsChecking False</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If Receivers = Nil Then</SourceLine>
   <SourceLine>Receivers = New Dictionary</SourceLine>
   <SourceLine>End</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If Not Receivers.HasKey(notification) Then</SourceLine>
   <SourceLine>// Subscribers are stored in an array</SourceLine>
   <SourceLine>Dim refs(-1) As WeakRef</SourceLine>
   <SourceLine>Receivers.Value(notification) = refs</SourceLine>
   <SourceLine>End</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim refs() As WeakRef = Receivers.Value(notification)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>refs.Add(New WeakRef(subscriber))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>notification as String, subscriber as TRNotificationDelegate</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Post</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>342460415</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Post(notification as string, sender as Object, data as Object)</SourceLine>
   <SourceLine>'#Pragma BackgroundTasks False</SourceLine>
   <SourceLine>'#Pragma StackOverflowChecking False</SourceLine>
   <SourceLine>'#Pragma NilObjectChecking False</SourceLine>
   <SourceLine>'#Pragma BoundsChecking False</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim goodRefs(-1) As WeakRef</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If Receivers = Nil Or Not Receivers.HasKey(notification) Then</SourceLine>
   <SourceLine>Return</SourceLine>
   <SourceLine>End</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim refs() As WeakRef = Receivers.Value(notification)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>For Each ref As WeakRef In refs</SourceLine>
   <SourceLine>Dim receiver As TRNotificationDelegate = TRNotificationDelegate(ref.Value)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If ref.Value &lt;&gt; Nil Then</SourceLine>
   <SourceLine>receiver.TRNotificationDelegate_ReceivedNotification(notification, sender, data)</SourceLine>
   <SourceLine>goodRefs.Add(ref)</SourceLine>
   <SourceLine>End</SourceLine>
   <SourceLine>Next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Receivers.Value(notification) = goodRefs // Only keep the good refs</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>notification as string, sender as Object, data as Object</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>UnsubscribeFrom</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1581516799</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub UnsubscribeFrom(notification as String, subscriber as TRNotificationDelegate)</SourceLine>
   <SourceLine>'#Pragma BackgroundTasks False</SourceLine>
   <SourceLine>'#Pragma StackOverflowChecking False</SourceLine>
   <SourceLine>'#Pragma NilObjectChecking False</SourceLine>
   <SourceLine>'#Pragma BoundsChecking False</SourceLine>
   <SourceLine>Dim goodRefs(-1) As WeakRef</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim d As Dictionary</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If Receivers = Nil Then</SourceLine>
   <SourceLine>Receivers = New Dictionary</SourceLine>
   <SourceLine>End</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If Not Receivers.HasKey(notification) Then</SourceLine>
   <SourceLine>Return</SourceLine>
   <SourceLine>End</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim refs() As WeakRef = Receivers.Value(notification)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>For Each ref As WeakRef In refs</SourceLine>
   <SourceLine>Dim receiver As TRNotificationDelegate = TRNotificationDelegate(ref.Value)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If ref.Value &lt;&gt; subscriber Then</SourceLine>
   <SourceLine>goodRefs.Add(ref)</SourceLine>
   <SourceLine>End</SourceLine>
   <SourceLine>Next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Receivers.Value(notification) = goodRefs // Only keep the good refs</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>notification as String, subscriber as TRNotificationDelegate</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>Receivers</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>977278975</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Receivers As Dictionary</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Receivers As Dictionary</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
</RBProject>
