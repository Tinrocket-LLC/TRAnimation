<?xml version="1.0" encoding="UTF-8"?>
<RBProject version="2023r2" FormatVersion="2" MinIDEVersion="20140300">
<block type="Module" ID="43339775">
 <ObjName>TRAnimationCanvasMobile</ObjName>
 <ObjContainerID>501213183</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>MobileCanvas</Superclass>
 <Interfaces> TRAnimationCanvasDelegate</Interfaces>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility>API2Only and ( (TargetIOS and (Target64Bit)) )</Compatibility>
 <HookInstance>
  <ItemName>Opening</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>244420607</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Opening()</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Me.Core = New TRAnimationCanvasCore(Me)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>RaiseEvent Opening</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
 </HookInstance>
 <HookInstance>
  <ItemName>Paint</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1854812159</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Paint(g As Graphics)</SourceLine>
   <SourceLine>#Pragma BackgroundTasks True</SourceLine>
   <SourceLine>#Pragma StackOverflowChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma NilObjectChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma BoundsChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Me.Core.HandleEvent_Paint(g)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
 </HookInstance>
 <HookInstance>
  <ItemName>PointerDown</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1554616319</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub PointerDown(position As Point, pointerInfo() As PointerEvent)</SourceLine>
   <SourceLine>#Pragma BackgroundTasks True</SourceLine>
   <SourceLine>#Pragma StackOverflowChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma NilObjectChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma BoundsChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim p As TRVector2D = New TRVector2D(position.X, position.Y)</SourceLine>
   <SourceLine>p = Me.Core.Camera.CurrentWorldTransform.Inverse.ApplyAffineTransform(p)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Me.Core.HandleEvent_PointerDown(New TRVector2D(position), p)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Only call .Start in a real pointer event; dont' call in the method version of PointerDown because that's used by the animation system, and calling .Start will break things</SourceLine>
   <SourceLine>Me.Core.Start</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
 </HookInstance>
 <HookInstance>
  <ItemName>PointerDrag</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1722863615</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub PointerDrag(position As Point, pointerInfo() As PointerEvent)</SourceLine>
   <SourceLine>#Pragma BackgroundTasks True</SourceLine>
   <SourceLine>#Pragma StackOverflowChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma NilObjectChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma BoundsChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim p As TRVector2D = New TRVector2D(position.X, position.Y)</SourceLine>
   <SourceLine>p = Me.Core.Camera.CurrentWorldTransform.Inverse.ApplyAffineTransform(p)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Me.Core.HandleEvent_PointerDrag(New TRVector2D(position), p)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
 </HookInstance>
 <HookInstance>
  <ItemName>PointerUp</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>41138175</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub PointerUp(position As Point, pointerInfo() As PointerEvent)</SourceLine>
   <SourceLine>#Pragma BackgroundTasks True</SourceLine>
   <SourceLine>#Pragma StackOverflowChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma NilObjectChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma BoundsChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim p As TRVector2D = New TRVector2D(position.X, position.Y)</SourceLine>
   <SourceLine>p = Me.Core.Camera.CurrentWorldTransform.Inverse.ApplyAffineTransform(p)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Me.Core.HandleEvent_PointerUp(New TRVector2D(position), p)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
 </HookInstance>
 <HookInstance>
  <ItemName>Closing</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1250922495</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Closing()</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Me.Core.Stop</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
 </HookInstance>
 <Method>
  <ItemName>TRAnimationCanvasDelegate_Refresh</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>32788479</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub TRAnimationCanvasDelegate_Refresh()</SourceLine>
   <SourceLine>// Part of the TRAnimationCanvasDelegate interface.</SourceLine>
   <SourceLine>#Pragma BackgroundTasks True</SourceLine>
   <SourceLine>#Pragma StackOverflowChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma NilObjectChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma BoundsChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Me.Refresh</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>TRAnimationCanvasDelegate_Width</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1326512127</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function TRAnimationCanvasDelegate_Width() As Double</SourceLine>
   <SourceLine>// Part of the TRAnimationCanvasDelegate interface.</SourceLine>
   <SourceLine>#Pragma BackgroundTasks True</SourceLine>
   <SourceLine>#Pragma StackOverflowChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma NilObjectChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma BoundsChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return Me.Width</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Double</ItemResult>
 </Method>
 <Method>
  <ItemName>TRAnimationCanvasDelegate_Height</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1827121151</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function TRAnimationCanvasDelegate_Height() As Double</SourceLine>
   <SourceLine>// Part of the TRAnimationCanvasDelegate interface.</SourceLine>
   <SourceLine>#Pragma BackgroundTasks True</SourceLine>
   <SourceLine>#Pragma StackOverflowChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma NilObjectChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma BoundsChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return Me.Height</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Double</ItemResult>
 </Method>
 <Method>
  <ItemName>TRAnimationCanvasDelegate_Raise_PointerUp</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>30674943</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub TRAnimationCanvasDelegate_Raise_PointerUp(screenPosition as TRVector2D, worldPosition as TRVector2D, tapCount as Integer)</SourceLine>
   <SourceLine>// Part of the TRAnimationCanvasDelegate interface.</SourceLine>
   <SourceLine>#Pragma BackgroundTasks True</SourceLine>
   <SourceLine>#Pragma StackOverflowChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma NilObjectChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma BoundsChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>RaiseEvent PointerUp(screenPosition, worldPosition, tapCount)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>screenPosition as TRVector2D, worldPosition as TRVector2D, tapCount as Integer</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>TRAnimationCanvasDelegate_Raise_PointerDown</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>617197567</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub TRAnimationCanvasDelegate_Raise_PointerDown(screenPosition as TRVector2D, worldPosition as TRVector2D)</SourceLine>
   <SourceLine>// Part of the TRAnimationCanvasDelegate interface.</SourceLine>
   <SourceLine>#Pragma BackgroundTasks True</SourceLine>
   <SourceLine>#Pragma StackOverflowChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma NilObjectChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma BoundsChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>RaiseEvent PointerDown(screenPosition, worldPosition)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>screenPosition as TRVector2D, worldPosition as TRVector2D</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>TRAnimationCanvasDelegate_Raise_PointerDrag</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1102827519</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub TRAnimationCanvasDelegate_Raise_PointerDrag(screenPosition as TRVector2D, worldPosition as TRVector2D)</SourceLine>
   <SourceLine>// Part of the TRAnimationCanvasDelegate interface.</SourceLine>
   <SourceLine>#Pragma BackgroundTasks True</SourceLine>
   <SourceLine>#Pragma StackOverflowChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma NilObjectChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma BoundsChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>RaiseEvent PointerDrag(screenPosition, worldPosition)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>screenPosition as TRVector2D, worldPosition as TRVector2D</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>TRAnimationCanvasDelegate_Raise_NextFrame</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1682513919</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub TRAnimationCanvasDelegate_Raise_NextFrame(g as Graphics, elapsedTime as Double)</SourceLine>
   <SourceLine>// Part of the TRAnimationCanvasDelegate interface.</SourceLine>
   <SourceLine>#Pragma BackgroundTasks True</SourceLine>
   <SourceLine>#Pragma StackOverflowChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma NilObjectChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma BoundsChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>RaiseEvent NextFrame(g, elapsedTime)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>g as Graphics, elapsedTime as Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>TRAnimationCanvasDelegate_BackgroundColor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1416429567</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function TRAnimationCanvasDelegate_BackgroundColor() As Color</SourceLine>
   <SourceLine>// Part of the TRAnimationCanvasDelegate interface.</SourceLine>
   <SourceLine>#Pragma BackgroundTasks True</SourceLine>
   <SourceLine>#Pragma StackOverflowChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma NilObjectChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma BoundsChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return Me.BackgroundColor</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Color</ItemResult>
 </Method>
 <Method>
  <ItemName>TRAnimationCanvasDelegate_GetCore</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>420810751</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function TRAnimationCanvasDelegate_GetCore() As TRAnimationCanvasCore</SourceLine>
   <SourceLine>// Part of the TRAnimationCanvasDelegate interface.</SourceLine>
   <SourceLine>#Pragma BackgroundTasks True</SourceLine>
   <SourceLine>#Pragma StackOverflowChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma NilObjectChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma BoundsChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return Me.Core</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>TRAnimationCanvasCore</ItemResult>
 </Method>
 <Method>
  <ItemName>TRAnimationCanvasDelegate_SetCore</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1556922367</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub TRAnimationCanvasDelegate_SetCore(core as TRAnimationCanvasCore)</SourceLine>
   <SourceLine>// Part of the TRAnimationCanvasDelegate interface.</SourceLine>
   <SourceLine>#Pragma BackgroundTasks True</SourceLine>
   <SourceLine>#Pragma StackOverflowChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma NilObjectChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma BoundsChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Me.Core = core</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>core as TRAnimationCanvasCore</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>TRAnimationCanvasDelegate_Raise_SpriteEvent</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1559644159</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub TRAnimationCanvasDelegate_Raise_SpriteEvent(sprite as TRAnimationSprite, eventData as Variant)</SourceLine>
   <SourceLine>// Part of the TRAnimationCanvasDelegate interface.</SourceLine>
   <SourceLine>#Pragma BackgroundTasks True</SourceLine>
   <SourceLine>#Pragma StackOverflowChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma NilObjectChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma BoundsChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>RaiseEvent SpriteEvent(sprite, eventData)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>sprite as TRAnimationSprite, eventData as Variant</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Hook>
  <ItemName>Opening</ItemName>
  <TextEncoding>134217984</TextEncoding>
  <ItemFlags>33</ItemFlags>
  <SystemFlags>0</SystemFlags>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Hook>
 <Hook>
  <ItemName>PointerDrag</ItemName>
  <TextEncoding>134217984</TextEncoding>
  <ItemFlags>33</ItemFlags>
  <SystemFlags>0</SystemFlags>
  <ItemParams>screenPosition as TRVector2D, worldPosition as TRVector2D</ItemParams>
  <ItemResult></ItemResult>
 </Hook>
 <Hook>
  <ItemName>PointerUp</ItemName>
  <TextEncoding>134217984</TextEncoding>
  <ItemFlags>33</ItemFlags>
  <SystemFlags>0</SystemFlags>
  <ItemParams>screenPosition as TRVector2D, worldPosition as TRVector2D, tapCount as Integer</ItemParams>
  <ItemResult></ItemResult>
 </Hook>
 <Hook>
  <ItemName>NextFrame</ItemName>
  <TextEncoding>134217984</TextEncoding>
  <ItemFlags>33</ItemFlags>
  <SystemFlags>0</SystemFlags>
  <ItemParams>g as Graphics, elapsedTime as Double</ItemParams>
  <ItemResult></ItemResult>
 </Hook>
 <Hook>
  <ItemName>PointerDown</ItemName>
  <TextEncoding>134217984</TextEncoding>
  <ItemFlags>33</ItemFlags>
  <SystemFlags>0</SystemFlags>
  <ItemParams>screenPosition as TRVector2D, worldPosition as TRVector2D</ItemParams>
  <ItemResult></ItemResult>
 </Hook>
 <Hook>
  <ItemName>SpriteEvent</ItemName>
  <TextEncoding>134217984</TextEncoding>
  <ItemFlags>33</ItemFlags>
  <SystemFlags>0</SystemFlags>
  <ItemParams>sprite as TRAnimationSprite, eventData as Variant</ItemParams>
  <ItemResult></ItemResult>
 </Hook>
 <Property>
  <ItemName>Core</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1499893759</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Core As TRAnimationCanvasCore</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Core As TRAnimationCanvasCore</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>BackgroundColor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>153475071</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>BackgroundColor As Color = Color.White</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>BackgroundColor As Color = Color.White</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>TintColor</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>ColorGroup</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Height</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Width</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>ControlCount</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>AccessibilityHint</ObjName>
   <PropertyGroup>UI Control</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>AccessibilityLabel</ObjName>
   <PropertyGroup>UI Control</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Enabled</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>UI Control</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Visible</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>UI Control</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>AllowKeyEvents</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>BackgroundColor</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>Color.White</PropertyValue>
   <ItemType>Color</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
</RBProject>
