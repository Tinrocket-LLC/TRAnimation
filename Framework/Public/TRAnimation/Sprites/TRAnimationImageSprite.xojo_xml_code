<?xml version="1.0" encoding="UTF-8"?>
<RBProject version="2024r1.1" FormatVersion="2" MinIDEVersion="20210300">
<block type="Module" ID="895811583">
 <ObjName>TRAnimationImageSprite</ObjName>
 <ObjContainerID>368007167</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>TRAnimationSprite</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2063161343</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(p as Picture)</SourceLine>
   <SourceLine>#Pragma BackgroundTasks True</SourceLine>
   <SourceLine>#Pragma StackOverflowChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma NilObjectChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma BoundsChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Me.Constructor</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Me.Sprite = p</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>p as Picture</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>UpdateCenter</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2027503615</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub UpdateCenter()</SourceLine>
   <SourceLine>#Pragma BackgroundTasks True</SourceLine>
   <SourceLine>#Pragma StackOverflowChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma NilObjectChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma BoundsChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If Me.Sprite = Nil Then </SourceLine>
   <SourceLine>Me.Center.Set(0, 0)</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>Me.Center.Set(Me.Sprite.Width / 2, Me.Sprite.Height / 2)</SourceLine>
   <SourceLine>End</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>NextFrameOverride</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1305688063</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub NextFrameOverride(g as Graphics, core as TRAnimationCanvasCore, worldTransform as TRAffineTransform, elapsedTime as Double)</SourceLine>
   <SourceLine>#Pragma BackgroundTasks True</SourceLine>
   <SourceLine>#Pragma StackOverflowChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma NilObjectChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma BoundsChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If Me.Sprite &lt;&gt; Nil And core.RenderDelegate = Nil Then</SourceLine>
   <SourceLine>g.DrawPicture(Me.Sprite, -Me.Center.x, -Me.Center.y, Me.Sprite.Width, Me.Sprite.Height)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'g.DrawingColor = Color.Red</SourceLine>
   <SourceLine>'g.FillRectangle(-Me.Center.x, -Me.Center.y, Me.Sprite.Width, Me.Sprite.Height)</SourceLine>
   <SourceLine>End</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>g as Graphics, core as TRAnimationCanvasCore, worldTransform as TRAffineTransform, elapsedTime as Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>LocalBoundsOverride</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>311937023</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function LocalBoundsOverride() As TRAnimationBounds</SourceLine>
   <SourceLine>#Pragma BackgroundTasks True</SourceLine>
   <SourceLine>#Pragma StackOverflowChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma NilObjectChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma BoundsChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If Me.Sprite &lt;&gt; Nil Then</SourceLine>
   <SourceLine>Dim r As Rect = New Rect(-Me.Center.X, -Me.Center.Y, Me.Sprite.Width, Me.Sprite.Height)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return New TRAnimationBounds(r)</SourceLine>
   <SourceLine>End</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>TRAnimationBounds</ItemResult>
 </Method>
 <Method>
  <ItemName>HitTestOverride</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1176012799</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function HitTestOverride(screenP as TRVector2D, worldP as TRVector2D, localP as TRVector2D) As Boolean</SourceLine>
   <SourceLine>#Pragma BackgroundTasks True</SourceLine>
   <SourceLine>#Pragma StackOverflowChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma NilObjectChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma BoundsChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If Me.Sprite = Nil Then</SourceLine>
   <SourceLine>Return False</SourceLine>
   <SourceLine>End</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If localP.x &gt;= -Me.Center.X And localP.x &lt; -Me.Center.X + Me.Sprite.Width Then</SourceLine>
   <SourceLine>If localP.y &gt;= -Me.Center.Y And localP.y &lt; -Me.Center.Y + Me.Sprite.Height Then</SourceLine>
   <SourceLine>Return True</SourceLine>
   <SourceLine>End</SourceLine>
   <SourceLine>End</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>screenP as TRVector2D, worldP as TRVector2D, localP as TRVector2D</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Copy</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1215066111</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Copy(c As TRAnimationSprite = nil) As TRAnimationSprite</SourceLine>
   <SourceLine>// Note: Not complete for this class or all subclasses that ship with TRAnimation</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#Pragma BackgroundTasks True</SourceLine>
   <SourceLine>#Pragma StackOverflowChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma NilObjectChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma BoundsChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If c = Nil Then</SourceLine>
   <SourceLine>c = New TRAnimationImageSprite</SourceLine>
   <SourceLine>End</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// NOTE: Keep copy code in alphabetical order</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>c = Super.Copy(c)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim cs As TRAnimationImageSprite = TRAnimationImageSprite(c)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Shallow copy</SourceLine>
   <SourceLine>cs.Sprite = Me.Sprite</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return cs</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>c As TRAnimationSprite = nil</ItemParams>
  <ItemResult>TRAnimationSprite</ItemResult>
 </Method>
 <Property>
  <ItemName>Sprite</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1375346687</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sprite As Picture</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Sprite As Picture</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>IgnoreBoundsTest</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>RenderBuffer</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Picture</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>IsAnimatingOverride</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>IgnoreHitTests</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>CanDrag</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>ID</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Alpha</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>1</PropertyValue>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Hidden</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>DrawChildrenFirst</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>RotationAsDegrees</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>AntiAlias</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Sprite</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Picture</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
</RBProject>
