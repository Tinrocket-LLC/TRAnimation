<?xml version="1.0" encoding="UTF-8"?>
<RBProject version="2024r1.1" FormatVersion="2" MinIDEVersion="20210300">
<block type="Module" ID="1567711231">
 <ObjName>TRAnimationGroupScreenSprite</ObjName>
 <ObjContainerID>252375039</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>TRAnimationGroupSprite</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility>(TargetConsole and (Target32Bit or Target64Bit)) or  (TargetWeb and (Target32Bit or Target64Bit)) or  (TargetDesktop and (Target32Bit or Target64Bit)) or  (TargetIOS and (Target64Bit)) or  (TargetAndroid and (Target64Bit))</Compatibility>
 <Method>
  <ItemName>NextFrame</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>971864063</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub NextFrame(g as Graphics, core as TRAnimationCanvasCore, parent as TRAnimationSprite, currentWorldTransform as TRAffineTransform, elapsedTime as Double)</SourceLine>
   <SourceLine>#Pragma BackgroundTasks True</SourceLine>
   <SourceLine>#Pragma StackOverflowChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma NilObjectChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine>#Pragma BoundsChecking TRAnimation.kSafeMode</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If Me.Hidden Then</SourceLine>
   <SourceLine>Return</SourceLine>
   <SourceLine>End</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Adjust our local transform to align to screen space</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim screenSpaceTransform As TRAffineTransform = TRAffineTransform.Concat(currentWorldTransform, core.Camera.CurrentWorldTransform.Inverse) // Compute the screen space transformation for the sprite</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Extract the constituent transformations from screenSpaceTransform</SourceLine>
   <SourceLine>Dim inversePosition As TRVector2D = screenSpaceTransform.Position</SourceLine>
   <SourceLine>Dim inverseScale As TRVector2D = screenSpaceTransform.Scale</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Me.Position.Set(inversePosition.X, inversePosition.Y)</SourceLine>
   <SourceLine>Me.Scale.Set(inverseScale.X, inverseScale.Y)</SourceLine>
   <SourceLine>Me.RotationAsDegrees = -screenSpaceTransform.RotationAsRadians</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Super.NextFrame(g, core, parent, currentWorldTransform, elapsedTime)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>g as Graphics, core as TRAnimationCanvasCore, parent as TRAnimationSprite, currentWorldTransform as TRAffineTransform, elapsedTime as Double</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Note>
  <ItemName>Note</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>65636351</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <NoteLine>Note</NoteLine>
   <NoteLine>A robust class to display a group of sprites in screen space (e.g., UI elements, score text, etc.)</NoteLine>
   <NoteLine></NoteLine>
  </ItemSource>
  <ItemFlags>0</ItemFlags>
 </Note>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>IgnoreBoundsTest</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>RenderBuffer</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Picture</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>IsAnimatingOverride</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>IgnoreHitTests</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>DrawChildrenFirst</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Hidden</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>ID</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Alpha</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>1</PropertyValue>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>CanDrag</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>RotationAsDegrees</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Double</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>AntiAlias</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
</RBProject>
